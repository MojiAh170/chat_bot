مرحله 1: مقدمات پایتون و نصب محیط توسعه (هفته 1)
تمرینات:
نوشتن یک برنامه که نام شما را چاپ کند.

برنامه‌ای بنویسید که سن شما را از کاربر بگیرد و بگوید در چند سال آینده چند سال خواهید داشت.

نوشتن برنامه‌ای که دو عدد را از کاربر بگیرد و مجموع آن‌ها را در قالب یک پیام چاپ کند.

نوشتن برنامه‌ای که مساحت دایره را با استفاده از فرمول 
𝐴
=
𝜋
𝑟
2
A=πr 
2
  محاسبه کرده و نتیجه را چاپ کند.

نوشتن برنامه‌ای که یک عدد را از کاربر گرفته و بگوید آیا عدد مثبت، منفی یا صفر است.

مرحله 2: ساختارهای کنترلی (شرط‌ها و حلقه‌ها) (هفته 2 تا 4)
تمرینات:
نوشتن برنامه‌ای که از کاربر یک عدد بگیرد و بگوید آیا عدد زوج است یا فرد.

نوشتن برنامه‌ای که از 1 تا 100 چاپ کند، اما برای اعداد تقسیم‌پذیر بر 3 "Fizz" چاپ کند و برای اعداد تقسیم‌پذیر بر 5 "Buzz" و برای اعداد تقسیم‌پذیر بر هر دو 3 و 5 "FizzBuzz" چاپ کند.

نوشتن برنامه‌ای که تعداد اعداد صحیحی که از کاربر گرفته شده و مجموع آن‌ها را نمایش دهد.

نوشتن برنامه‌ای که از کاربر چند عدد بگیرد و بزرگترین عدد را پیدا کند.

نوشتن برنامه‌ای که از کاربر یک رشته بگیرد و تعداد حروف "a" در آن را بشمارد.

نوشتن برنامه‌ای که یک ماتریس 3x3 ایجاد کند و مجموع اعداد موجود در آن را محاسبه کند.

مرحله 3: توابع و ماژول‌ها (هفته 5 تا 6)
تمرینات:
نوشتن یک تابع که مجموع دو عدد را محاسبه کند.

نوشتن یک تابع که یک رشته را دریافت کرده و معکوس آن را برگرداند.

نوشتن تابعی که از کاربر دو عدد بگیرد و بزرگترین عدد را پیدا کند.

نوشتن تابعی که یک لیست از اعداد را بگیرد و مجموع آن‌ها را محاسبه کند.

نوشتن برنامه‌ای که از ماژول random استفاده کند و یک بازی حدس عدد ایجاد کند.

نوشتن یک برنامه که از کاربر تاریخ تولد را بگیرد و تعداد روزهای باقی‌مانده تا تاریخ بعدی تولد را محاسبه کند.

مرحله 4: کار با فایل‌ها و ورودی/خروجی (هفته 7)
تمرینات:
نوشتن برنامه‌ای که یک متن را از کاربر بگیرد و در یک فایل متنی ذخیره کند.

نوشتن برنامه‌ای که محتوای یک فایل متنی را بخواند و چاپ کند.

نوشتن برنامه‌ای که از کاربر نام و سن را گرفته و آن را در فایل CSV ذخیره کند.

نوشتن برنامه‌ای که از کاربر یک فایل متنی را انتخاب کند و تعداد کلمات داخل آن را بشمارد.

نوشتن برنامه‌ای که محتویات یک فایل JSON را بخواند و آن را به صورت زیبای خوانا چاپ کند.

نوشتن برنامه‌ای که یک لیست از رشته‌ها را در یک فایل متنی ذخیره کند و بعد آن‌ها را بخواند و چاپ کند.

مرحله 5: برنامه‌نویسی شی‌گرا (OOP) (هفته 8 تا 9)
تمرینات:
نوشتن یک کلاس Person که ویژگی‌های name, age و address را داشته باشد و متدی برای نمایش اطلاعات شخص ایجاد کند.

نوشتن یک کلاس Car که ویژگی‌های make, model, year و color داشته باشد و متدی برای نمایش اطلاعات خودرو داشته باشد.

ایجاد یک کلاس BankAccount که ویژگی‌های balance, account_holder داشته باشد و متدهای deposit و withdraw را پیاده‌سازی کند.

نوشتن کلاس Rectangle که ویژگی‌های length و width داشته باشد و متدهایی برای محاسبه مساحت و محیط مستطیل داشته باشد.

نوشتن یک کلاس Student که از کلاس Person ارث‌بری کند و ویژگی‌های student_id و major را به آن اضافه کند.

نوشتن برنامه‌ای که چند شی از کلاس‌های مختلف ایجاد کند و از متدهای آن‌ها استفاده کند.

مرحله 6: کار با پایگاه‌داده‌ها و SQL (ماه 3)
تمرینات:
ساخت پایگاه‌داده SQLite برای ذخیره اطلاعات کاربران (نام، سن، ایمیل) و افزودن رکورد به آن.

نوشتن برنامه‌ای که داده‌ها را از پایگاه‌داده SQLite خوانده و آن‌ها را چاپ کند.

نوشتن برنامه‌ای که اطلاعات یک کاربر را از پایگاه‌داده بر اساس شناسه (ID) جستجو کند.

نوشتن برنامه‌ای که اطلاعات کاربر را از پایگاه‌داده ویرایش کند (برای مثال، تغییر سن یا ایمیل).

نوشتن برنامه‌ای که از کاربر یک لیست از داده‌ها بگیرد و آن‌ها را در پایگاه‌داده ذخیره کند.

نوشتن برنامه‌ای که تمامی رکوردها را از پایگاه‌داده حذف کند.

مرحله 7: توسعه وب با پایتون (Flask/Django) (ماه 4)
تمرینات:
ساخت یک وب‌سایت ساده با استفاده از Flask که یک صفحه خوش‌آمدگویی نمایش دهد.

نوشتن برنامه‌ای که با استفاده از Flask داده‌ها را از یک فرم دریافت کرده و نمایش دهد.

ایجاد یک وب‌سایت با استفاده از Flask که بتواند اطلاعاتی مانند نام، سن و ایمیل را از کاربر بگیرد و در پایگاه‌داده ذخیره کند.

ایجاد یک وب‌سایت با استفاده از Django که اجازه ثبت‌نام و ورود به سیستم را به کاربران بدهد.

نوشتن برنامه‌ای با Flask که API ساده‌ای برای مدیریت کاربران ایجاد کند.

ساخت یک بلاگ ساده با استفاده از Django که کاربران بتوانند پست‌های جدید ایجاد کنند.

مرحله 8: یادگیری ماشین و هوش مصنوعی با پایتون (ماه 5 به بعد)
تمرینات:
پیش‌بینی قیمت خانه با استفاده از داده‌های تاریخی از یک فایل CSV (با استفاده از scikit-learn).

ساخت مدل طبقه‌بندی برای پیش‌بینی اینکه آیا یک ایمیل اسپم است یا خیر (استفاده از scikit-learn).

استفاده از الگوریتم K-Nearest Neighbors (KNN) برای دسته‌بندی داده‌ها.

ساخت یک مدل رگرسیون خطی برای پیش‌بینی قیمت یک خانه بر اساس ویژگی‌هایی مانند مساحت و تعداد اتاق‌ها.

پیاده‌سازی الگوریتم درخت تصمیم (Decision Tree) برای دسته‌بندی یک مجموعه داده.

ساخت یک شبکه عصبی ساده با استفاده از TensorFlow یا Keras برای شناسایی دست‌نوشته‌ها (مانند MNIST).

مرحله 9: پروژه‌های پیشرفته و تخصصی (ماه 6 به بعد)
تمرینات:
ساخت یک API با Flask که داده‌ها را از پایگاه‌داده بازیابی کرده و به صورت JSON به کاربر برگرداند.

ساخت یک بازی 2D با استفاده از Pygame.

توسعه یک سیستم چت آنلاین با استفاده از Flask و WebSocket.

طراحی یک سیستم پشتیبان‌گیری آنلاین با استفاده از Flask و ذخیره‌سازی فایل‌ها در سرور.

ایجاد یک وب‌سایت فروشگاهی ساده با استفاده از Django که کاربران بتوانند محصولات را خریداری کنند.